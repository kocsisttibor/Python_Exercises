"""
Practice Python 32 - Hangman
http://www.practicepython.org/exercise/2017/01/10/32-hangman.html

In this exercise, we will finish building Hangman. In the game of Hangman, the player only has 6 incorrect guesses (head, body, 2 legs, and 2 arms) before they lose the game.

In Part 1, we loaded a random word list and picked a word from it. In Part 2, we wrote the logic for guessing the letter and displaying that information to the user. In this exercise, we have to put it all together and add logic for handling guesses.

Copy your code from Parts 1 and 2 into a new file as a starting point. Now add the following features:

Only let the user guess 6 times, and tell the user how many guesses they have left.
Keep track of the letters the user guessed. If the user guesses a letter they already guessed, donâ€™t penalize them - let them guess again.
Optional additions:

When the player wins or loses, let them start a new game.
Rather than telling the user "You have 4 incorrect guesses left", display some picture art for the Hangman. This is challenging - do the other parts of the exercise first!
"""

import random

def random_word ():
    with open("C:/E/Visual Studio Code/Practice Python/sowpods.txt") as f:
        words = list(f)
    return(random.choice(words).strip())

def game():
    again = "Y"
      
    while again == "Y":
        word = random_word()
        letters_guessed = []
        word = list(word)
        hang = list("_" * len(word))
        count = 0
        maxtry = 6
        again2 = "Y"

        print("Welcome to Hangman! \nAnytime you want to exit please enter: exit \nHere is your word to guess: \n")
        print(word)
        print(" ".join(hang))
        letter = input("\nPlease enter a letter:")

        while "_" in hang:
            if letter == "exit":
                again2 = "N"
                break
            if letter in letters_guessed:
                print("\nThis letter is guessed before.")
                letter = input("\nPlease enter a letter:")
            elif letter in word:
                hang[word.index(letter)] = letter
                word[word.index(letter)] = "_"
                if letter not in word:
                    print("\nGreat guess! Here is your word:\n")
                    print(" ".join(hang))
                    letters_guessed.append(letter)
                    if "_" in hang:
                        letter = input("\nPlease enter a letter:")
            else:
                letters_guessed.append(letter)
                if letter not in hang:
                    count += 1
                    if count < maxtry:
                        print("\nThis word is not in the word. You have " + str(maxtry - count) + " more chances.")
                        letter = input("\nPlease enter a letter:")
                    else:
                        print("\nThis word is not in the word. You are hanged! :) Thanks for the game!")
                        break
            if "_" not in hang:
                print("\nCongrats! Thanks for the game!")
        if again2 == "N":
            break
        else:
            again = input("Do you want to play again? (Y/N)")

if __name__ == "__main__":
    game()
